{"version":3,"sources":["api.ts","routes/Chart.tsx","util.ts","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","theme.ts","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","useQuery","fetchCoinHistory","refetchInterval","isLoading","data","console","log","type","series","name","map","price","x","time_open","y","open","high","low","close","options","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","formatNumber","value","replace","toString","formatDate","date","Date","toLocaleString","year","month","day","hour","minute","hour12","skeletonAnimation","keyframes","Container","styled","div","SkeletonBox","Data","props","theme","boxColor","textColor","Price","useParams","tickersLoading","tickersData","quotes","USD","ath_date","ath_price","toFixed","percent_change_1y","percent_change_30d","percent_change_7d","percent_change_24h","percent_change_1h","percent_change_30m","percent_change_15m","Title","h1","accentColor","Loader","span","Header","header","GoHome","Link","bgColor","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","loading","to","icon","faHome","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","GlobalStyle","createGlobalStyle","ThemeChangeButton","button","App","isDark","changeTheme","onClick","faSun","faMoon","initialIsOpen","darkTheme","lightTheme","queryClient","QueryClient","AppWrapper","useState","setIsDark","client","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e89f1768.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from 'react-query';\nimport { fetchCoinHistory } from '../api';\nimport ApexChart from 'react-apexcharts';\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    ['ohlcv', coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  console.log(data);\n\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: 'Price',\n              data: data?.map((price) => {\n                return {\n                  x: price.time_open,\n                  y: [price.open, price.high, price.low, price.close],\n                };\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              type: 'candlestick',\n              height: 350,\n            },\n            title: {\n              text: 'CandleStick Chart',\n              align: 'left',\n            },\n            xaxis: {\n              type: 'datetime',\n            },\n            yaxis: {\n              tooltip: {\n                enabled: false,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","export const formatNumber = (value?: string | number) => {\n  if (!value) {\n    return '0';\n  }\n\n  if (typeof value === 'string') {\n    return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const formatDate = (date: string | Date) => {\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: false,\n  };\n\n  const formattedDate = date.toLocaleString('ko-KR', options);\n  return formattedDate.replace(',', '');\n};\n","import { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { fetchCoinTickers } from '../api';\nimport { PriceData, RouteParams } from '../types';\nimport { formatDate, formatNumber } from '../util';\n\nfunction Price() {\n  const { coinId } = useParams<RouteParams>();\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId)\n  );\n\n  return (\n    <Container>\n      {!tickersLoading && tickersData ? (\n        <>\n          <Data>\n            <p>{formatDate(tickersData.quotes.USD.ath_date)} 최고가 </p>\n            <p>${formatNumber(tickersData.quotes.USD.ath_price.toFixed(2))}</p>\n          </Data>\n          <Data>\n            <p>1년 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_1y.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>한 달 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_30d.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>일주일 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_7d.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>24시간 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_24h.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>한 시간 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_1h.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>30분 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_30m.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n          <Data>\n            <p>15분 전보다</p>\n            <p>\n              {formatNumber(\n                tickersData.quotes.USD.percent_change_15m.toFixed(2)\n              )}\n              %\n            </p>\n          </Data>\n        </>\n      ) : (\n        <>\n          <SkeletonBox />\n          <SkeletonBox />\n        </>\n      )}\n    </Container>\n  );\n}\n\nconst skeletonAnimation = keyframes`\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: calc(200px + 100%) 0;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 70px;\n`;\n\nconst SkeletonBox = styled.div`\n  width: 200px;\n  height: 100px;\n  background-color: #f0f0f0;\n  background-image: linear-gradient(90deg, #e6e6e6, #cccccc, #e6e6e6);\n  background-size: 200px 100%;\n  background-repeat: no-repeat;\n  border-radius: 4px;\n  animation: ${skeletonAnimation} 1.5s ease-in-out infinite;\n`;\n\nconst Data = styled.div`\n  width: 200px;\n  height: 100px;\n  background-color: ${(props) => props.theme.boxColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 600;\n  gap: 10px;\n`;\n\nexport default Price;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { Helmet } from 'react-helmet-async';\nimport { useQuery } from 'react-query';\nimport {\n  Link,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\nimport Chart from './Chart';\nimport Price from './Price';\nimport { InfoData, PriceData, RouteParams, RouteState } from '../types';\nimport { formatNumber } from '../util';\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst GoHome = styled(Link)`\n  position: absolute;\n  top: 40px;\n  left: 20px;\n  background-color: ${(props) => props.theme.accentColor};\n  color: ${(props) => props.theme.bgColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    ['info', coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    ['tickers', coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? 'Loading...' : infoData?.name}\n        </Title>\n        <GoHome to=\"/\">\n          {' '}\n          <FontAwesomeIcon icon={faHome} />\n        </GoHome>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>\n                ${formatNumber(tickersData?.quotes?.USD.price.toFixed(3))}\n              </span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{formatNumber(tickersData?.total_supply)}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{formatNumber(tickersData?.max_supply)}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from 'react-helmet-async';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.boxColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>('allCoins', fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\nfunction Router() {\n  return (\n    <BrowserRouter basename=\"/react-masterclass\">\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst ThemeChangeButton = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  background-color: ${(props) => props.theme.accentColor};\n  color: ${(props) => props.theme.bgColor};\n  font-weight: 600;\n  padding: 10px 20px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n`;\n\ninterface Props {\n  isDark: boolean;\n  changeTheme: () => void;\n}\n\nfunction App({ isDark, changeTheme }: Props) {\n  return (\n    <HelmetProvider>\n      <GlobalStyle />\n      <ThemeChangeButton onClick={changeTheme}>\n        {isDark ? (\n          <FontAwesomeIcon icon={faSun} />\n        ) : (\n          <FontAwesomeIcon icon={faMoon} />\n        )}\n      </ThemeChangeButton>\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#121212',\n  boxColor: '#1E1E1E',\n  textColor: 'white',\n  accentColor: '#0066CC',\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: '#FFFFFF',\n  boxColor: '#F2F2F2',\n  textColor: 'black',\n  accentColor: '#32CD32',\n};\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { darkTheme, lightTheme } from './theme';\n\nconst queryClient = new QueryClient();\n\nconst AppWrapper = () => {\n  const [isDark, setIsDark] = useState(true);\n  const theme = isDark ? darkTheme : lightTheme;\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App isDark={isDark} changeTheme={() => setIsDark((prev) => !prev)} />\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}